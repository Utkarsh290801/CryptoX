const crypto = require("crypto");
const nodemailer = require("nodemailer");
require("dotenv").config();

const User = require("../models/user");
const emailVerifyToken = require("../models/emailVerifyToken");

module.exports = async (userid, hostaddress) => {
	let userData;
	try {
		userData = await User.findById(userid);
	} catch (err) {
		console.log(err);
		return next(new Error("ERR: Unable to find user."));
	}

	const token = new emailVerifyToken({
		userId: userid,
		token: crypto.randomBytes(16).toString("hex"),
	});

	// Save the verification token
	try {
		await token.save();
	} catch (err) {
		console.log(err);
		return next(
			new Error("Signing up! Email Verification Token generation failed")
		);
	}

	// Send the email
	let transporter = nodemailer.createTransport({
		host: "smtp.mailtrap.io",
		port: 2525,
		auth: {
			user: process.env.MAILTRAP_ID, //generated by Mailtrap
			pass: process.env.MAILTRAP_PWD, //generated by Mailtrap
		},
	});
	let mailOptions = {
		from: `"CryptoX" <${process.env.COMPANY_MAIL}>`,
		to: userData.email,
		subject: "Email Verification | CryptoX",
		text:
			"Hey " +
			userData.name +
			",\n\n" +
			"Please verify your account by clicking the link: \nhttp://" +
			hostaddress +
			"/verify/email/" +
			token.token +
			"\n\nThis link will expire in 24 hours. Try logging in to receive new link." +
			"\n\n\n\nRegards,\nCryptoX\n\nKeep Minting! :)",
	};

	let info;
	try {
		info = await transporter.sendMail(mailOptions);
	} catch (err) {
		console.log(err);
		return next(new Error("ERR: Unable to send Email Verification mail."));
	}

	return info;
};
