const { validationResult } = require("express-validator");
const crypto = require("crypto");
const nodemailer = require("nodemailer");
require("dotenv").config();

const User = require("../../models/user");
const passResetToken = require("../../models/passResetToken");

const resetPasswordRequest = async (req, res, next) => {
	const errors = validationResult(req);
	if (!errors.isEmpty()) {
		return next(new Error("Invalid email, please check your input."));
	}

	const { email } = req.body;

	let bhulakkadUser;
	try {
		bhulakkadUser = await User.findOne({ email: email });
	} catch (err) {
		return next(new Error("Something went wrong! Please try again."));
	}

	if (!bhulakkadUser) {
		return next(new Error("No such user found!"));
	}

	const token = new passResetToken({
		userId: bhulakkadUser.id,
		token: crypto.randomBytes(16).toString("hex"),
	});

	// Save the verification token
	try {
		await token.save();
	} catch (err) {
		console.log(err);
		return next(new Error("Password Reset Token generation failed"));
	}

	// Send the email
	let transporter = nodemailer.createTransport({
		host: "smtp.mailtrap.io",
		port: 2525,
		auth: {
			user: process.env.MAILTRAP_ID, //generated by Mailtrap
			pass: process.env.MAILTRAP_PWD, //generated by Mailtrap
		},
	});

	let mailOptions = {
		from: `"CryptoX" <${process.env.COMPANY_MAIL}>`,
		to: bhulakkadUser.email,
		subject: "Reset Password | CryptoX",
		text:
			"Hey " +
			bhulakkadUser.name +
			",\n\n" +
			"You can reset your account's password by clicking the link: \n" +
			req.header('Referer') +
			"/user/reset/" +
			token.token +
			"\n\nThis link will expire in 10 mins. Ignore the mail if not requested." +
			"\n\n\n\nRegards,\nCryptoX\n\nKeep Minting! :)",
	};

	let info;
	try {
		info = await transporter.sendMail(mailOptions);
	} catch (err) {
		console.log(err);
		return next(new Error("Unable to send Password Reset mail."));
	}

	res.status(200).json({
		message: "Password Reset Email sent!",
		mailinfo: info.messageId,
	});
}

module.exports = resetPasswordRequest;