const nodemailer = require("nodemailer");
require("dotenv").config();

const User = require("../models/user");

const invite = async (req, res, next) => {
	console.log(req.body);
	const { inviteLink, emailToSend } = req.body;

	// Send the email
	let transporter = nodemailer.createTransport({
		host: "smtp.mailtrap.io",
		port: 2525,
		auth: {
			user: process.env.MAILTRAP_ID, //generated by Mailtrap
			pass: process.env.MAILTRAP_PWD, //generated by Mailtrap
		},
	});
	console.log(inviteLink);
	let mailOptions = {
		from: `"CryptoX" <${process.env.COMPANY_MAIL}>`,
		to: emailToSend,
		subject: "Invitation to Register | CryptoX",
		text:
			"Hello there,\n\n" +
			"Register at CryptoX by clicking the below link and get Rs. 100 as bonus cash.\nLink: " +
			inviteLink +
			"\n\n\nRegards,\nCryptoX\n\nKeep Minting! :)",
	};

	let info;
	try {
		info = await transporter.sendMail(mailOptions);
	} catch (err) {
		console.log(err);
		return next(new Error("ERR: Unable to send Email Verification mail."));
	}

	res.status(200).json({
		message: "Invite Sent!",
		mailinfo: info.messageId,
	});
};

const addReferralAmount = (userid) => {
	return new Promise(async (resolve, reject) => {
		try {
			// User who got referred by someone
			const userReferred = await User.findById(userid).populate("wallet");
			if (userReferred.referredBy !== null) {
				// User who referred this user
				const userReferrer = await User.findById(userReferred.referredBy).populate("wallet");

				const referrerAmount = BigInt(Math.trunc(process.env.REFERRAL_AMOUNT_OLD_USER * 100));
				const newBalanceReferrer = BigInt(userReferrer.wallet.balance) + referrerAmount;
				const newRefBalanceReferrer = BigInt(userReferrer.wallet.referralBalance) + referrerAmount;

				const referredAmount = BigInt(Math.trunc(process.env.REFERRAL_AMOUNT_NEW_USER * 100));
				const newBalanceReferred = BigInt(userReferred.wallet.balance) + referredAmount;
				const newRefBalanceReferred = BigInt(userReferred.wallet.referralBalance) + referredAmount;

				userReferrer.wallet.balance = newBalanceReferrer.toString();
				userReferrer.wallet.referralBalance = newRefBalanceReferrer.toString();
				await userReferrer.wallet.save();

				userReferred.wallet.balance = newBalanceReferred.toString();
				userReferred.wallet.referralBalance = newRefBalanceReferred.toString();
				await userReferred.wallet.save();

				resolve("Added Referral Amount");
			} else {
				resolve("unreferred");
			}
		} catch (err) {
			console.log(err);
			reject("Unable to check for Referral Amount");
		}
	});
};

module.exports.invite = invite;
module.exports.addReferralAmount = addReferralAmount;
